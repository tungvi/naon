version: '3.8'

services:
  postgres:
    image: postgres:15.7
    container_name: naon-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: naon_dev
      POSTGRES_USER: naon_user
      POSTGRES_PASSWORD: naon_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U naon_user -d naon_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - naon-network

  redis:
    image: redis:7-alpine
    container_name: naon-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass naon_redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - naon-network

  # pgadmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: naon-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@naon.ai
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - naon-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  naon-network:
    driver: bridge
